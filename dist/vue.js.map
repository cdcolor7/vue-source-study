{"version":3,"file":"vue.js","sources":["../src/dep.js","../src/util.js","../src/array.js","../src/observer.js","../src/watcher.js","../src/compile.js","../src/entry-dev.js"],"sourcesContent":["/**\r\n * 消息管理器\r\n */\r\n\r\nexport class Dep {\r\n  constructor() {\r\n    this.deps = new Set();\r\n  }\r\n\r\n  // 添加订阅者\r\n  addSub(watcher) {\r\n    this.deps.add(watcher);\r\n  }\r\n\r\n  // 操作watcher addDep 方法\r\n  depend () {\r\n    if (Dep.target) {\r\n      Dep.target.addDep(this)\r\n    }\r\n  }\r\n\r\n  // 通知更新\r\n  notify() {\r\n    this.deps.forEach(watcher => watcher.update());\r\n  }\r\n  \r\n}","// 返回指定 key 对应的 data值\r\nexport function getDataVal(exp) {\r\n  let value\r\n  if(/\\[|\\|]|\\./.test(exp)) {\r\n    let keyArr = exp.replace(/\\]/g, '').split(/\\[|\\./g);\r\n    keyArr.forEach((key, index) => {\r\n      value = index === 0? this[key]: value[key];\r\n    })\r\n  } else {\r\n    value = this[exp]\r\n  }\r\n  return value;\r\n}\r\n\r\n// 设置指定 key 对应的 data值\r\nexport function setDataVal(exp, value) {\r\n  let val\r\n  if(/\\[|\\|]|\\./.test(exp)) {\r\n    let keyArr = exp.replace(/\\]/g, '').split(/\\[|\\./g);\r\n    let l = keyArr.length -1 ;\r\n    keyArr.forEach((key, index) => {\r\n      if(index === 0) {\r\n        val = this[key]\r\n      } else if (index === l){\r\n        val[key] = value\r\n      } else {\r\n        val = val[key]\r\n      }\r\n    })\r\n  } else {\r\n    this[exp] = value\r\n  }\r\n}\r\n\r\n\r\n// 定义一个Property\r\nexport function def(obj, key, val, enumerable) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true\r\n  })\r\n}\r\n\r\n// 数组响应式处理\r\nexport function dependArray (value) {\r\n  for (let e, i = 0, l = value.length; i < l; i++) {\r\n    e = value[i]\r\n    e && e.__ob__ && e.__ob__.dep.depend()\r\n    if (Array.isArray(e)) {\r\n      dependArray(e)\r\n    }\r\n  }\r\n}\r\n\r\n// 检测一个对象的属性是否存在\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function hasOwn(obj, key){\r\n  return hasOwnProperty.call(obj, key)\r\n}\r\n","/**\r\n * 数组函数劫持\r\n */\r\n\r\nimport {def} from \"./util\"\r\n\r\nconst arrayProto = Array.prototype\r\n\r\nexport const arrayMethods = Object.create(arrayProto)\r\n\r\nconst methodsToPatch =  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\"]\r\n\r\nmethodsToPatch.forEach(function (method) {\r\n  // 保存原始方法\r\n  const original = arrayProto[method]\r\n  // 覆盖之\r\n  def(arrayMethods, method, function (...args) {\r\n    // 1.执行默认方法\r\n    const result = original.apply(this, args)\r\n    // 2.变更通知\r\n    const ob = this.__ob__\r\n    // 可能会有新元素加入\r\n    let inserted\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break\r\n    }\r\n    // 对新加入的元素做响应式\r\n    if (inserted) ob.observeArray(inserted)\r\n    // notify change\r\n    // ob内部有一个dep，让它去通知更新\r\n    ob.dep.notify()\r\n    return result\r\n  })\r\n})\r\n","/**\r\n * 响应式数据\r\n */\r\n\r\nimport { Dep } from './dep'\r\nimport { arrayMethods } from './array'\r\nimport { def, hasOwn, dependArray } from './util'\r\n\r\nexport class Observer {\r\n  constructor(value) {\r\n    this.value = value;\r\n    this.dep = new Dep()\r\n    def(value, '__ob__', this)\r\n    if(Array.isArray(value)) {\r\n      if('__proto__' in {}) {\r\n        value.__proto__ = arrayMethods;\r\n      }\r\n      this.observeArray(value)\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n  }\r\n\r\n  // 数组响应式处理\r\n  observeArray(arr) {\r\n    for(let i=0, l = arr.length; i<l; i++) {\r\n      observe(arr[i]);\r\n    }\r\n  }\r\n\r\n  // 对象响应式处理\r\n  walk(obj) {\r\n    Object.keys(obj).forEach(key => {\r\n      defineReactive(obj, key, obj[key]);\r\n    })\r\n  }\r\n}\r\n\r\n// 数据劫持\r\nexport function defineReactive(obj, key, val){\r\n  let childOb = observe(val);\r\n  // 每一可以对应一个 dep;\r\n  const dep = new Dep();\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      // 依赖收集\r\n      dep.depend();\r\n      if (childOb) {\r\n        // 子ob也要做依赖收集\r\n        childOb.dep.depend()\r\n        if (Array.isArray(val)) {\r\n          dependArray(val)\r\n        }\r\n      }\r\n      return val;\r\n    },\r\n    set(newVal) {\r\n      if(val !== newVal) {\r\n        observe(newVal);\r\n        val = newVal;\r\n        // 通知更新\r\n        dep.notify();\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// observe\r\nexport function observe(obj) {\r\n  if(typeof obj !== 'object' || obj === null) {\r\n    return;\r\n  }\r\n  let ob;\r\n  if(hasOwn(obj, '__ob__') && obj.__ob__ instanceof Observer) {\r\n    ob = obj.__ob__\r\n  } else {\r\n    ob = new Observer(obj);\r\n  }\r\n  return ob;\r\n}\r\n\r\n// porxy\r\nexport function proxy(vm) {\r\n  Object.keys(vm.$data).forEach(key => {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm.$data[key]\r\n      },\r\n      set(newVal) {\r\n        vm.$data[key] = newVal;\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n","/**\r\n * 依赖收集\r\n */\r\n\r\nimport { Dep } from \"./dep\";\r\nimport { getDataVal } from \"./util\"\r\n\r\nexport class Watcher {\r\n  constructor(vm, updaterFn) {\r\n    this.vm = vm;\r\n    this.getter = updaterFn;\r\n\r\n    // 依赖收集\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    Dep.target = this;\r\n    this.getter.call(this.vm);\r\n    Dep.target = null;\r\n  }\r\n  \r\n  // 相互添加引用\r\n  addDep (dep) {\r\n    dep.addSub(this)\r\n  }\r\n\r\n  update() {\r\n    this.get();\r\n    // this.updaterFn.call(this.vm, getDataVal.call(this.vm, this.key))\r\n  }\r\n  \r\n}","/**\r\n * 编译器\r\n */\r\n\r\nimport { Watcher } from './watcher'\r\nimport { getDataVal, setDataVal } from './util'\r\n\r\nexport class Compile {\r\n  constructor(el, vm) {\r\n    this.$vm = vm;\r\n    this.$el = document.querySelector(el);\r\n    if(this.$el) {\r\n      this.compile(this.$el);\r\n    }\r\n  }\r\n\r\n  // 递归子节点\r\n  compile(el) {\r\n    const childNodes = el.childNodes;\r\n    childNodes.forEach(node => {\r\n      if(node.nodeType === 1) { // 元素节点\r\n        this.compileElement(node);\r\n        // 递归\r\n        if(node.hasChildNodes) {\r\n          this.compile(node);\r\n        }\r\n      } else if (this.isInter(node)) { // {{}}\r\n        this.compileText(node);\r\n      }\r\n    })\r\n  }\r\n\r\n  // 正则 {{counter}}\r\n  isInter(node) {\r\n    return node.nodeType === 3 && /\\{\\{(.*)\\}\\}/.test(node.textContent);\r\n  }\r\n\r\n  // 编译属性\r\n  compileElement(node) {\r\n    let nodeAttrs = node.attributes;\r\n    Array.from(nodeAttrs).forEach(attr => {\r\n      // v-text=\"xxx\"\r\n      const attrname = attr.name; // v-text\r\n      const exp = attr.value; // xxx\r\n      // 指令解析\r\n      if(attrname.indexOf(\"v-\") === 0) {\r\n        const dir = attrname.substring(2);\r\n        const dirArr = dir.split(':')\r\n        if(dirArr.length === 2 && dirArr[0] === 'on') { // 判断 v-on:click =\"onclick\"\r\n          this.eventHandler(node, exp, dirArr[1])\r\n        } else {\r\n          this[dir] && this[dir](node, exp)\r\n        }\r\n      } else if (attrname.indexOf(\"@\") === 0) { // 判断 @click =\"onclick\"\r\n        const dir = attrname.substring(1);\r\n        this.eventHandler(node, exp, dir)\r\n      }\r\n    })\r\n  }\r\n\r\n  // 事件处理\r\n  eventHandler(node, exp, event) {\r\n    const fn = this.$vm[exp]\r\n    if(event && fn) {\r\n      node.addEventListener(event, fn.bind(this.$vm), false);\r\n    }\r\n  }\r\n\r\n  // 处理文本节点\r\n  compileText(node) {\r\n    this.update(node, RegExp.$1, 'text');\r\n  }\r\n\r\n\r\n  // 更新中转函数\r\n  update(node, exp, dir) {\r\n    const fn = this[`${dir}Updater`];\r\n    fn && fn(node, getDataVal.call(this.$vm, exp));\r\n    // 依赖wather初始化\r\n    new Watcher(this.$vm, exp, val => {\r\n      fn && fn(node, val)\r\n    })\r\n  }\r\n\r\n  // v-model\r\n  modelUpdater(node, value) {\r\n    node.value = value\r\n  }\r\n\r\n  // 文本节点\r\n  textUpdater(node, value) {\r\n    node.textContent = value;\r\n  }\r\n\r\n  // html标签解析节点\r\n  htmlUpdater(node, value) {\r\n    node.innerHTML = value;\r\n  }\r\n\r\n  // v-model\r\n  model(node, exp) {\r\n    this.update(node, exp, 'model');\r\n    node.addEventListener('input', e => {\r\n      setDataVal.call(this.$vm, exp, e.target.value)\r\n    })\r\n  }\r\n\r\n  // v-text\r\n  text(node, exp) {\r\n    this.update(node, exp, 'text')\r\n  }\r\n   \r\n  // v-html\r\n  html(node, exp) {\r\n    this.update(node, exp, 'html')\r\n  }\r\n\r\n}\r\n","/** \r\n * 入口文件\r\n*/\r\n\r\nimport { observe, proxy } from './observer.js'\r\nimport { Compile } from './compile'\r\nimport { Watcher } from './watcher'\r\n\r\nexport default class Pvue {\r\n  constructor(options) {\r\n    this.$options = options;\r\n    this.$data = options.data;\r\n    observe(this.$data)\r\n\r\n    // 代理data\r\n    proxy(this)\r\n\r\n    // 代理methods\r\n    for(const key in options.methods) {\r\n      this[key] = typeof options.methods[key] === 'function'? options.methods[key].bind(this): noop;\r\n    }\r\n\r\n    // 模板编译\r\n    // new Compile(options.el, this)\r\n    if(options.el) {\r\n      this.$mount(options.el);\r\n    }\r\n  }\r\n\r\n  // 挂载\r\n  $mount(el){\r\n    // 获取宿主原始\r\n    this.$el = document.querySelector(el);\r\n    // 组件更新函数\r\n    const updateComponent = () => {\r\n      // const { render } = this.$options;\r\n      // const el = render.call(this);\r\n      // const parent = this.$el.parentElement;\r\n      // parent.insertBefore(el, this.$el.nextSibling);\r\n      // parent.removeChild(this.$el);\r\n      // this.$el = el;\r\n      const { render } = this.$options;\r\n      const vnode = render.call(this, this.$createElement);\r\n      this._update(vnode);\r\n\r\n    }\r\n    // 创建wather\r\n    new Watcher(this, updateComponent);\r\n  }\r\n\r\n  // 获取vnode\r\n  $createElement(tag, props, children) {\r\n    return { tag, props, children };\r\n  }\r\n  // 更新\r\n  _update(vnode) {\r\n     const preVnode = this._vnode;\r\n     if(preVnode) { // 更新\r\n      this.__patch__(preVnode, vnode)\r\n     } else { // 初始化\r\n      this.__patch__(this.$el, vnode)\r\n     }\r\n  }\r\n  // patch方法\r\n  __patch__(oldVode, vnode){\r\n    // 判断old是否为dom\r\n    if(oldVode.nodeType) {  // 初始化\r\n      const parent = oldVode.parentElement;\r\n      const refElm = oldVode.nextSibling;\r\n      // 递归vnode创建dom树\r\n      const el = this.createElm(vnode);\r\n      parent.insertBefore(el, refElm);\r\n      parent.removeChild(oldVode);\r\n    } else { // 更新\r\n      const el = vnode.el = oldVode.el;\r\n      // 判断是否是相同节点samenode\r\n      if(oldVode.tag === vnode.tag) {\r\n        // diff\r\n        // props\r\n        // children\r\n        const oldCh = oldVode.children;\r\n        const newCh = vnode.children;\r\n        if(typeof newCh === 'string') {\r\n          if(typeof oldCh === 'string') {\r\n            if(newCh !== oldCh) {\r\n              el.textContent = newCh;\r\n            }\r\n          } else {\r\n            // 清空并替换为文本\r\n            el.textContent = newCh;\r\n          }\r\n        } else {\r\n          // 数组\r\n          if(typeof oldCh === 'string') {\r\n            el.innerHTML = '';\r\n            newCh.forEach(child => {\r\n              el.appendChild(this.createElm(child));\r\n            })\r\n          } else { // 双方都有孩子 diff \r\n            this.updateChildren(el, oldCh, newCh);\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n    // 保存vnode\r\n    this._vnode = vnode;\r\n    \r\n  }\r\n  // 创建真实节点\r\n  createElm(vnode) {\r\n    const el = document.createElement(vnode.tag);\r\n    // props\r\n    for (const key in vnode.props) {\r\n      el.setAttribute(key, vnode.props[key]);\r\n    }\r\n\r\n    // 处理子节点\r\n    if(vnode.children) {\r\n      if(typeof vnode.children !== 'object') {\r\n        el.textContent = vnode.children;\r\n      } else {\r\n        // 数组类子元素\r\n        vnode.children.forEach(vnode => {\r\n          el.appendChild(this.createElm(vnode));\r\n        })\r\n      }\r\n    }\r\n    vnode.el = el;\r\n    return el;\r\n  }\r\n  // 更新子元素\r\n  updateChildren(el, oldCh, newCh){}\r\n}\r\n\r\n// 空函数\r\nfunction noop(){}"],"names":["Dep","deps","Set","watcher","add","target","addDep","forEach","update","def","obj","key","val","enumerable","defineProperty","dependArray","value","e","i","l","length","__ob__","dep","depend","Array","isArray","hasOwnProperty","Object","prototype","hasOwn","call","arrayProto","arrayMethods","create","methodsToPatch","method","original","args","result","apply","ob","inserted","slice","observeArray","notify","Observer","__proto__","walk","arr","keys","defineReactive","childOb","observe","newVal","proxy","vm","$data","Watcher","updaterFn","getter","get","addSub","Pvue","options","$options","data","methods","bind","noop","el","$mount","$el","document","querySelector","updateComponent","render","vnode","$createElement","_update","tag","props","children","preVnode","_vnode","__patch__","oldVode","nodeType","parent","parentElement","refElm","nextSibling","createElm","insertBefore","removeChild","oldCh","newCh","textContent","innerHTML","child","appendChild","updateChildren","createElement","setAttribute"],"mappings":"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"}